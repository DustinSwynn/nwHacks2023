import { g as getLivepeerProvider } from './getStream-bc7c16e3.esm.js';
import { g as getClient } from './client-80f2db6f.esm.js';
import { a as defaultTranscodingProfiles } from './provider-3254bb2f.esm.js';

function watchLivepeerProvider(callback) {
  const client = getClient();
  const handleChange = async () => callback(getLivepeerProvider());
  const unsubscribe = client.subscribe(({
    provider
  }) => provider, handleChange);
  return unsubscribe;
}

function createAsset(args) {
  const provider = getLivepeerProvider();
  return provider.createAsset(args);
}

function getAsset(args) {
  const provider = getLivepeerProvider();
  return provider.getAsset(args);
}

function updateAsset(args) {
  const provider = getLivepeerProvider();
  return provider.updateAsset(args);
}

function getAssetMetrics(args) {
  const provider = getLivepeerProvider();
  return provider.getAssetMetrics(args);
}

function getPlaybackInfo(args) {
  const provider = getLivepeerProvider();
  return provider.getPlaybackInfo(args);
}

function createStream(args) {
  const provider = getLivepeerProvider();
  return provider.createStream({
    ...args,
    profiles: args?.profiles ?? defaultTranscodingProfiles
  });
}

function getStreamSession(args) {
  const provider = getLivepeerProvider();
  return provider.getStreamSession(args);
}

function getStreamSessions(args) {
  const provider = getLivepeerProvider();
  return provider.getStreamSessions(args);
}

function updateStream(args) {
  const provider = getLivepeerProvider();
  return provider.updateStream(args);
}

export { createStream as a, getAssetMetrics as b, createAsset as c, getPlaybackInfo as d, getStreamSession as e, getStreamSessions as f, getAsset as g, updateStream as h, updateAsset as u, watchLivepeerProvider as w };
