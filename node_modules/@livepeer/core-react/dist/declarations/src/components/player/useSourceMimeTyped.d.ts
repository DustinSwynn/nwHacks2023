import { AudioSrc, VideoSrc } from '@livepeer/core';
import { CreateAssetUrlProgress } from '@livepeer/core/types';
import { PlayerProps } from './Player';
export type UseSourceMimeTypedProps<TElement, TPoster> = {
    src: PlayerProps<TElement, TPoster>['src'];
    playbackId: PlayerProps<TElement, TPoster>['playbackId'];
    refetchPlaybackInfoInterval: NonNullable<PlayerProps<TElement, TPoster>['refetchPlaybackInfoInterval']>;
    autoUrlUpload: NonNullable<PlayerProps<TElement, TPoster>['autoUrlUpload']>;
    jwt: PlayerProps<TElement, TPoster>['jwt'];
};
export declare const useSourceMimeTyped: <TElement, TPoster>({ src, playbackId, jwt, refetchPlaybackInfoInterval, autoUrlUpload, }: UseSourceMimeTypedProps<TElement, TPoster>) => {
    readonly source: import("@livepeer/core").HlsSrc | VideoSrc[] | AudioSrc[] | null;
    readonly uploadStatus: CreateAssetUrlProgress | null;
};
