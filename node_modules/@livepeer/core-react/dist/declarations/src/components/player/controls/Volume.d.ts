import { MediaControllerState } from '@livepeer/core';
import * as React from 'react';
type VolumeStateSlice = Pick<MediaControllerState, 'volume' | 'requestVolume' | 'requestToggleMute' | 'muted' | 'isVolumeChangeSupported'>;
export type VolumeProps = {
    /**
     * The callback to trigger any logic on click/press.
     */
    onPress?: () => void;
    /**
     * Toggles showing the slider to change the volume level. Defaults to true.
     * If false, the volume will toggle between 0% and 100%.
     */
    showSlider?: boolean;
    /**
     * The icon to be used for the button when unmuted.
     * @type React.ReactElement
     */
    unmutedIcon?: React.ReactElement;
    /**
     * The icon to be used for the button when muted.
     * @type React.ReactElement
     */
    mutedIcon?: React.ReactElement;
};
type VolumeCoreProps = {
    defaultMutedIcon: React.ReactElement;
    defaultUnmutedIcon: React.ReactElement;
} & VolumeStateSlice & VolumeProps;
export declare const useVolume: (props: VolumeCoreProps) => {
    title: string;
    buttonProps: {
        volume: number;
        onPress: () => Promise<void>;
        children: React.ReactElement<unknown, string | React.JSXElementConstructor<any>> | null;
    };
    progressProps: {
        shown: boolean;
        onChange: (value: number) => Promise<void>;
        leftCss: {
            backgroundColor: string;
        };
        middleCss: {
            backgroundColor: string;
        };
        rightCss: {
            backgroundColor: string;
        };
        thumbCss: {
            backgroundColor: string;
        };
    };
};
export {};
